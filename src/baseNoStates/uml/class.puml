@startuml
skinparam classAttributeIconSize 0
' this is to use the standard notation for public, protected, private

class User {
- name : string
- credential : int

+ User(name:string, credential:int)
+ setCredential()
+ getName()
+ getCredential()
+ toString()
}



class Group{
    - typeGroup : string
    - users : vector<User>
    - schedules : Schedules
    - actions : vector <actions>
   + Group(typeGroup : string)
   + addUser(name:string, credential: int)
   + removeUser(credential : int)
   + addActions(permission : string)
   - removeActions(permission : string)

}
Group -left-> "n..1" Action : actions
Group -down-> "n..1" Schedule : schedules
Group -down-> "1..n"  User: users


class Schedule{
    - workDays : ArrayList <DayOfWeek>
    - workHours : ArrayList <LocalTime>
    - workDate : ArrayList <LocalDate>

    + Schedule()
    + setAdmin()
    + setManager()
    + setEmployee()
    + setBlank()
    + addWorkDay(day:string)
    + removeWorkDay(day:string)
    + addHour (hour : int)
    + removeHour (hour: int)
    + editWorkDate ( newDate:LocalDate)

}


class Door{
    -id:string
    -close:boolean
    -status:State
    -to:Area
    -from:Area
}

Interface State{
    {abstract}+setUnlock();
    {abstract}+setLock();
    {abstract}+setPropped();
}

class Unlock extends State{
    +setUnlock()
}

class Propped extends State{
    +setPropped()
}

class Lock extends State{
    +setLock()
}

class Area Extends Building{
    -doors:List<Doors>
}

class Partition extends Building{
    -partitions:List<Partition>
    -areas:List<Area>
}

abstract class Building{

}

class Action{
    OPEN=1
    CLOSE=0
    LOCK = 3
    UNLOCK = 4
    UNLOCK_SHORTLY = 5
}



Door -right-*"n..1" State : status
Door --up--"2..n" Area: to, from
Partition --right*"n..1" Partition : partition




@enduml